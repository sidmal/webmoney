// Code generated by mockery v2.0.4. DO NOT EDIT.

package mocks

import (
	big "math/big"

	mock "github.com/stretchr/testify/mock"
)

// KeyContainerInterface is an autogenerated mock type for the KeyContainerInterface type
type KeyContainerInterface struct {
	mock.Mock
}

// Encrypt provides a mock function with given fields: wmid, keyPassword
func (_m *KeyContainerInterface) Encrypt(wmid string, keyPassword string) {
	_m.Called(wmid, keyPassword)
}

// Extract provides a mock function with given fields:
func (_m *KeyContainerInterface) Extract() (*big.Int, *big.Int, error) {
	ret := _m.Called()

	var r0 *big.Int
	if rf, ok := ret.Get(0).(func() *big.Int); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*big.Int)
		}
	}

	var r1 *big.Int
	if rf, ok := ret.Get(1).(func() *big.Int); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*big.Int)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func() error); ok {
		r2 = rf()
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// Verify provides a mock function with given fields:
func (_m *KeyContainerInterface) Verify() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
